#! /bin/bash

####################################################################################
#
#                                      Huggin API
#
####################################################################################

# TODO: Decide if this should be hard-coded across mutliple files (as currently is)
CFGDIR="/Users/doug/src/ai/t5"
HFOUTDIR="previous_output_dir-Google-BERT"

TLD=${CFGDIR}/${HFOUTDIR}

SCRIPTDIR=$(dirname "$0")
SCRIPTNAME=$(basename "$0")
counter=0

mkdir -p ${TLD}/gv-graphs

# ((expression)) The "expression" is evaluated according to the rules described under ARITHMETIC EVALUATION.
#                This is exactly equivalent to let "expression".

# ======================================= INDIV SCRIPTS ================================================
# --------------------------------- NON-TRAINING SAMPLE -------------------------------
let counter++
echo "${counter}) test-qa-efficacy.py"
echo "----------------------"
#python ${SCRIPTDIR}/test-qa-efficacy.py ${CFGDIR}/qa_train-Google-BERT.json show
python ${SCRIPTDIR}/test-qa-efficacy.py ${CFGDIR}/qa_train-Google-BERT.json
while [ $? -ne 0 ]
do
  echo "No correct answers found so rerunning..."
  python ${SCRIPTDIR}/test-qa-efficacy.py ${CFGDIR}/qa_train-Google-BERT.json
done

# --------------------------------- GRAPH TRAINING WEIGHTS + LOSSES -------------------------------
let counter++
echo "${counter}) graph-weights.py"
echo "-------------------"
###############################################
# Append cmd with "&" to "background" process #
###############################################
echo "   CURRENTLY USING: '${TLD}/old-logs' (for Pre-trained state + training run node change)"
#python ${SCRIPTDIR}/graph-weights.py ${TLD}/old-logs show

echo "ONLY saving graphs (not showing them)"
python ${SCRIPTDIR}/graph-weights.py ${TLD}/old-logs

# 21/6/24 DH: Add 'graph-losses.py'
let counter++
echo "${counter}) graph-losses.py"
echo "-------------------"
#python ${SCRIPTDIR}/graph-losses.py ${TLD}/weights show
echo "ONLY saving graphs (not showing them)"
python ${SCRIPTDIR}/graph-losses.py ${TLD}/weights

# --------------------------------- GRAPH NON-TRAINING LOGITS -----------------------------
let counter++
echo "${counter}) graph-node-logits.py"
echo "-----------------------"
#python ${SCRIPTDIR}/graph-node-logits.py ${TLD} show

echo "ONLY saving graphs (not showing them)"
python ${SCRIPTDIR}/graph-node-logits.py ${TLD}

# Where graphs get saved:
# -----------------------
# test-qa-efficacy.py  = ${TLD}/graphs
#                        (via 'qa_lime.py::graphTokenVals(...)')
#                          logits-by-token-<token len>.png
#
# graph-weights.py     = ${TLD}/old-logs/weights-graphs
#                          0-fullValues.png, 1025-fullValues.png, total-weight-change.png
# graph-losses.py      = ${TLD}/weights/weights-graphs
#                          losses-by-epochs<cnt>.png
# graph-node-logits.py = ${TLD}/gv-graphs
#                          all_layers-287-<token len>.png
#
# (SEE 'graph-weights.py', 'graph-losses.py' for '~/weights' dir [OR <dir> cmd line arg] (creating '~/weights/weights-graphs'))

# --------------------------------- PRODUCE GRAPHVIZ PDF -------------------------------
let counter++
echo "${counter}) create-gv-output.py"
echo "----------------------"
python ${SCRIPTDIR}/create-gv-output.py ${TLD}

# 19/6/24 DH: ...and finally we have our HuggingFace/Bert Q&A output...
#             (from "DeepPavlov ODQA pipe", Dec 23, 2023, that has no 'qa_outputs' layer...!) 
open $(cat gv_filename.txt)

